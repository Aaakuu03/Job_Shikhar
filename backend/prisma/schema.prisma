generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(cuid()) // Changed to CUID
  name     String?
  email    String     @unique
  phoneNumber   String  @unique
  password String
  userType Role       @default(JOBSEEKER)
  isVerified     Boolean  @default(false)
  verificationToken String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  resetPasswordToken     String?  
  resetPasswordTokenExpiry DateTime? 
  isFormFilled Boolean  @default(false)
  token    Token[]
  employer Employer[]
  jobSeeker  JobSeeker?
}
model Token {
  id     String     @id @default(cuid()) 
  token  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model JobSeeker {
  id                      String       @id @default(cuid()) // Changed to CUID
  userId                  String       @unique
  dob                     DateTime? 
  gender                  String?
  user                    User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  address                 String?
  expectedSalary          Int      @default(0)           // Default salary
  currency                String   @default("NRS")       // Default currency
  salaryType              String   @default("above")     // Default type
  salaryFrequency         String   @default("monthly")   // Default frequency
  skills                  String
  jobType                 String   @default("Full Time") // Ensure one definition
  preferredJobLocation    String?
  createdAt               DateTime @default(now())
  job                     Job[]
  application             Application[]
  education               Education[]
  training                Training[]
  workExperience          WorkExperience[]
  notifications           Notification[]
}

model Education {
  id            String   @id @default(cuid())
  jobSeekerId   String
  degree        String
  courseProgram String?
  board         String
  college       String?
  startDate       Int      // Store as an integer (year)
  endDate         Int?     // Store as an integer (year, nullable)
  currentlyStudying Boolean @default(false) // To track if the user is currently studying
  jobSeeker     JobSeeker @relation(fields: [jobSeekerId], references: [id], onDelete: Cascade)
}


model Training {
  id            String      @id @default(cuid())
  jobSeekerId   String
  trainingName  String
  institute     String
  duration      Int
  year          Int
  jobSeeker     JobSeeker  @relation(fields: [jobSeekerId], references: [id], onDelete: Cascade)
}

model WorkExperience {
  id            String      @id @default(cuid())
  jobSeekerId   String
  companyName   String
  position      String
  jobLocation   String
  startDate     Int
  endDate       Int
  description   String?
  jobSeeker     JobSeeker  @relation(fields: [jobSeekerId], references: [id], onDelete: Cascade)
}



model Employer {
  id             String  @id @default(cuid()) // Changed to CUID
  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String  @unique
  industryType   IndustryType
  address        String
  companySize    String
  contactName    String
  phone          String
  aboutCompany   String 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  job            Job[]
  employerPackage  EmployerPackage?
}

model Admin {
  id       String   @id @default(cuid()) 
  email    String   @unique
  name     String?
  password String
}

model Job {
  id                  String       @id @default(cuid()) // Changed to CUID
  title               String
  category            JobCategory
  description         String
  createdAt           DateTime @default(now())
  employer            Employer      @relation(fields: [employerId], references: [id], onDelete: Cascade)
  employerId          String
  applicationDeadline DateTime
  requirement         String
  jobLocation         String
  jobType             EmploymentType
  salary              String?
  experience          String?
  jobSeeker           JobSeeker[]
  application         Application[]
}


model PricingPackage {
  id        String @id @default(uuid())
  name      String @unique  
  price     Float
  jobLimit  Int
  duration  Int  
  employerPackages EmployerPackage[] // Back-reference
}

model EmployerPackage {
  id         String  @id @default(uuid())
  employer   Employer @relation(fields: [employerId], references: [id], onDelete: Cascade) // FIXED
  employerId String  @unique  // Ensuring one-to-one mapping
  package    PricingPackage @relation(fields: [packageId], references: [id], onDelete: Cascade)
  packageId  String
  expiresAt  DateTime
  jobCount   Int @default(0) // Tracks number of jobs posted under this package
}
model Application {
  id                String   @id @default(cuid()) // Changed to CUID
  jobSeekerId       String
  jobId             String
  status            String
  jobSeeker         JobSeeker @relation(fields: [jobSeekerId], references: [id], onDelete: Cascade)
  job               Job        @relation(fields: [jobId], references: [id], onDelete: Cascade)
  appliedAt    DateTime @default(now())

}

model Notification {
  id          String   @id @default(cuid())
  jobSeekerId String
  message     String
  read        Boolean  @default(false)
  createdAt   DateTime @default(now())

  jobSeeker   JobSeeker @relation(fields: [jobSeekerId], references: [id], onDelete: Cascade)
}

enum Role {
  JOBSEEKER
  EMPLOYER
}

enum EmploymentType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
  FREELANCE
  TEMPORARY
}

enum IndustryType {
  IT_SOFTWARE
  FINANCE_BANKING
  HEALTHCARE
  EDUCATION
  MANUFACTURING
  RETAIL_ECOMMERCE
  HOSPITALITY_TOURISM
  FOOD_BEVERAGE
  CONSTRUCTION_ENGINEERING
}

enum JobCategory {
  SOFTWARE_DEVELOPMENT
  DATA_SCIENCE_AI
  NETWORKING_CYBERSECURITY
  ACCOUNTING_FINANCE
  SALES_MARKETING
  HEALTHCARE_MEDICAL
  TEACHING_EDUCATION
  MECHANICAL_ENGINEERING
  CUSTOMER_SUPPORT
  GRAPHIC_DESIGN_MULTIMEDIA
  HUMAN_RESOURCES
  TRANSPORT_LOGISTICS
}